function [ T, G, F ] = generateLFN()
%GENERATELFN Summary of this function goes here
%   Detailed explanation goes here
% step 1. specify the model parameters: 
%   number of users, N
%   number of words, V
%   number of topics = number of groups, K
%   Theta: KxN 
%   beta: KxV
%   Phi: KxK
%   Bern: KxK
    N = 100;
    V = 500;
    K = 20;

    Theta = rand(K,N); % can consider using Dirichlet r.v. instead
    Theta = bsxfun(@rdivide, Theta, sum(Theta));
    beta = rand(K,V);
    beta = bsxfun(@rdivide, beta, sum(beta,2));
    Phi = randn(K,K);
    Bern = rand(K,K); % each element is one parameter of Bernoulli dist.

% setp 2. sample the 1) topics, 2) words, 3) group connection, 4) dialog and 5) following-relations
    
    % 2.1 sample Left part
    C = floor(rand(N,1)*1000+1);
    % C(n): number of words from user n, from 1 to 1000
    fprintf(2,'generating Left topic model part\n');
    for n=1:N
        % sample C(n) topics for user n
        T{n} = sampleCat(Theta(:,n), C(n),1);
        % sample C(n) words for user n
        for k=1:K
            idx = find(T{n}==k);
            if(~isempty(idx))
                W{n}(idx) = sampleCat(beta(k,:)', length(idx), 1);
            end
        end
    end

    fprintf(2,'generating Right component model part\n');
    % 2.2 sample Right part
    M = 50;%floor(rand(N,1)*10+1);
    % M(n): number of dialog involving user n, from 1 to 10
    G = cell(N,N);
    D = cell(N,N);
    for p=1:N
        for q=1:N
            theta = 0.5*(Theta(:,p)+Theta(:,q));
            % sample M(p) diaglog (latent) variables
            G{p,q} = sampleCat(theta, M,1);
        end
    end
    for p=1:N
        for q=1:N
            for m=1:M
                D{p,q}(m) = rand(M,1)<= Bern(G{p,q}, G{p,q}); % bernoulli parameter, M(p)x1
        end
    end

    % 2.3 sample the Following relation
    fprintf(2,'generating followship part\n');
    F = zeros(N,N);
    % average topic weight of one user
    mT = zeros(N,K);
    for n=1:N
        for k=1:K
            mT(n,k) = sum(T{n}==k);
        end
    end
    mT = bsxfun(@rdivide, mT, sum(mT,2));

    mG = cell(N,N);
    for p=1:N
        for q=1:N
            mG{p,q} = zeros(K,1);
            for k=1:K
                mG{p,q}(k) = sum(mG{p,q}==k);
            end
            mG{p,q} = mG{p,q}/sum(mG{p,q});
        end
    end

    for p=1:N
        for q=1:N
            F(p,q) = rand(1,1)<mT(p,:)*Phi*mT{p,q};
        end
    end
    % average grouping weight of one pair
end

function X = sampleCat(theta, m, n)
% sample multinomial (categorical) random variables of size [mxn]
    N = m*n;
    K = length(theta);
    count = mnrnd(N,theta,1); 
    % a rown vector indicating number of examples from each group
    count = cumsum([0 count]);
    X = zeros(N,1);
    for k=1:K
        X(count(k)+1:count(k+1)) = X(count(k)+1:count(k+1))+k;
    end
    X = X(randperm(length(X)));
    X = reshape(X,[m,n]);
end
